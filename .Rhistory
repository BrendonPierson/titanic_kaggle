train$Cabin <- substring(train$Cabin, 1, 1)
test$Cabin <- substring(test$Cabin, 1, 1)
#Neither of these seem to be dropping the columns we want. But I don't think that matters.
drops <- c("Ticket", "PassengerId")
trainSubset <- train[, !(names(train) %in% drops)]
testSubset <- test[, !(names(test) %in% drops)]
#trainSubset <- train[,-which(names(train) %in% c("Ticket", "PassengerId"))]
#testSubset <- test[,-which(names(test) %in% c("Ticket", "PassengerId"))]
#This gives us a Title column and gets rid of the names at the same time.
names(trainSubset)[names(trainSubset) == 'Name'] <- 'Title'
trainSubset$Title <- gsub('(.*, )|(\\..*)', '', trainSubset$Title)
trainSubset$Title <- factor(trainSubset$Title)
names(testSubset)[names(testSubset) == 'Name'] <- 'Title'
testSubset$Title <- gsub('(.*, )|(\\..*)', '', testSubset$Title)
testSubset$Title <- factor(testSubset$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
trainSubset$Title[trainSubset$Title == 'Mlle']        <- 'Miss'
testSubset$Title[testSubset$Title == 'Mlle']        <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Ms']          <- 'Miss'
testSubset$Title[testSubset$Title == 'Ms']          <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Mme']         <- 'Mrs'
testSubset$Title[testSubset$Title == 'Mme']         <- 'Mrs'
trainSubset$Title[trainSubset$Title %in% rare_title]  <- 'Rare Title'
testSubset$Title[testSubset$Title %in% rare_title]  <- 'Rare Title'
#trainSubset <- train[,-which(names(train) %in% c("Name"))]
#testSubset <- test[,-which(names(test) %in% c("Name"))]
trainSubset$Pclass <- factor(trainSubset$Pclass)
trainSubset$Survived <- factor(trainSubset$Survived)
#trainSubset <- trainSubset[complete.cases(trainSubset),]
testSubset$Pclass <- factor(testSubset$Pclass)
#testSubset <- testSubset[complete.cases(testSubset),]
summary(trainSubset)
testSubset
train$Cabin <- substring(train$Cabin, 1, 1)
test$Cabin <- substring(test$Cabin, 1, 1)
#Neither of these seem to be dropping the columns we want. But I don't think that matters.
drops <- c("Ticket", "PassengerId")
trainSubset <- train[, !(names(train) %in% drops)]
testSubset <- test[, !(names(test) %in% drops)]
#trainSubset <- train[,-which(names(train) %in% c("Ticket", "PassengerId"))]
#testSubset <- test[,-which(names(test) %in% c("Ticket", "PassengerId"))]
#This gives us a Title column and gets rid of the names at the same time.
names(trainSubset)[names(trainSubset) == 'Name'] <- 'Title'
trainSubset$Title <- gsub('(.*, )|(\\..*)', '', trainSubset$Title)
trainSubset$Title <- factor(trainSubset$Title)
names(testSubset)[names(testSubset) == 'Name'] <- 'Title'
testSubset$Title <- gsub('(.*, )|(\\..*)', '', testSubset$Title)
testSubset$Title <- factor(testSubset$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
trainSubset$Title[trainSubset$Title == 'Mlle']        <- 'Miss'
testSubset$Title[testSubset$Title == 'Mlle']        <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Ms']          <- 'Miss'
testSubset$Title[testSubset$Title == 'Ms']          <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Mme']         <- 'Mrs'
testSubset$Title[testSubset$Title == 'Mme']         <- 'Mrs'
trainSubset$Title[trainSubset$Title %in% rare_title]  <- 'Rare Title'
testSubset$Title[testSubset$Title %in% rare_title]  <- 'Rare Title'
#trainSubset <- train[,-which(names(train) %in% c("Name"))]
#testSubset <- test[,-which(names(test) %in% c("Name"))]
trainSubset$Pclass <- factor(trainSubset$Pclass)
trainSubset$Survived <- factor(trainSubset$Survived)
#trainSubset <- trainSubset[complete.cases(trainSubset),]
testSubset$Pclass <- factor(testSubset$Pclass)
#testSubset <- testSubset[complete.cases(testSubset),]
trainSubset
testSubset
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial", na.action=na.exclude)
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial", na.action=na.exclude)
summary(logisticModel)
summary(logisticModelNoCabin)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial", na.action=na.exclude)
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC <- Survived ~ Pclass + Sex + Age
logisticModelASC <- glm(formulaASC, data=trainSubset, family="binomial", na.action=na.exclude)
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial", na.action=na.exclude)
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial", na.action=na.exclude)
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC1)
summary(logisticModelASC2)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial", na.action=na.exclude)
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial", na.action=na.exclude)
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC1)
summary(logisticModelASC2)
with(logisticModel, pchisq(null.deviance - deviance, df.null - df.residual))
with(logisticModelNoCabin, pchisq(null.deviance - deviance, df.null - df.residual))
with(logisticModelASC1, pchisq(null.deviance - deviance, df.null - df.residual))
with(logisticModelASC2, pchisq(null.deviance - deviance, df.null - df.residual))
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial", na.action=na.exclude)
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial", na.action=na.exclude)
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC1)
summary(logisticModelASC2)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial", na.action=na.exclude)
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial", na.action=na.exclude)
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC1)
summary(logisticModelASC2)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC1)
summary(logisticModelASC2)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
anova(logisticModel, logisticModelNoCabin, test ="Chisq")
#summary(logisticModel)
#summary(logisticModelNoCabin)
#summary(logisticModelASC2)
#summary(logisticModelASC1)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
anova(logisticModelNoCabin, logisticModel, test ="Chisq")
#summary(logisticModel)
#summary(logisticModelNoCabin)
#summary(logisticModelASC2)
#summary(logisticModelASC1)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
anova(logisticModelASC2, logisticModelNoCabin, test ="Chisq")
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
anova(logisticModelASC2, logisticModelNoCabin, test ="Chisq")
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
anova(logisticModelASC2, logisticModelASC1, test ="Chisq")
#summary(logisticModel)
#summary(logisticModelNoCabin)
#summary(logisticModelASC2)
#summary(logisticModelASC1)
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC1 <- Survived ~ Pclass + Sex + Age
logisticModelASC1 <- glm(formulaASC1, data=trainSubset, family="binomial")
formulaASC2 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC2 <- glm(formulaASC2, data=trainSubset, family="binomial")
anova(logisticModelASC1, logisticModelASC2, test ="Chisq")
#summary(logisticModel)
#summary(logisticModelNoCabin)
#summary(logisticModelASC2)
#summary(logisticModelASC1)
train$Cabin <- substring(train$Cabin, 1, 1)
test$Cabin <- substring(test$Cabin, 1, 1)
#Neither of these seem to be dropping the columns we want. But I don't think that matters.
drops <- c("Ticket", "PassengerId")
trainSubset <- train[, !(names(train) %in% drops)]
testSubset <- test[, !(names(test) %in% drops)]
#trainSubset <- train[,-which(names(train) %in% c("Ticket", "PassengerId"))]
#testSubset <- test[,-which(names(test) %in% c("Ticket", "PassengerId"))]
#This gives us a Title column and gets rid of the names at the same time.
names(trainSubset)[names(trainSubset) == 'Name'] <- 'Title'
trainSubset$Title <- gsub('(.*, )|(\\..*)', '', trainSubset$Title)
trainSubset$Title <- factor(trainSubset$Title)
names(testSubset)[names(testSubset) == 'Name'] <- 'Title'
testSubset$Title <- gsub('(.*, )|(\\..*)', '', testSubset$Title)
testSubset$Title <- factor(testSubset$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
trainSubset$Title[trainSubset$Title == 'Mlle']        <- 'Miss'
testSubset$Title[testSubset$Title == 'Mlle']        <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Ms']          <- 'Miss'
testSubset$Title[testSubset$Title == 'Ms']          <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Mme']         <- 'Mrs'
testSubset$Title[testSubset$Title == 'Mme']         <- 'Mrs'
trainSubset$Title[trainSubset$Title %in% rare_title]  <- 'Rare Title'
testSubset$Title[testSubset$Title %in% rare_title]  <- 'Rare Title'
#trainSubset <- train[,-which(names(train) %in% c("Name"))]
#testSubset <- test[,-which(names(test) %in% c("Name"))]
trainSubset$Pclass <- factor(trainSubset$Pclass)
trainSubset$Survived <- factor(trainSubset$Survived)
trainSubset <- trainSubset[complete.cases(trainSubset),]
testSubset$Pclass <- factor(testSubset$Pclass)
testSubset <- testSubset[complete.cases(testSubset),]
trainSubset
testSubset
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC <- glm(formulaASC, data=trainSubset, family="binomial")
anova(logisticModelASC1, logisticModelASC2, test ="Chisq")
#summary(logisticModel)
#summary(logisticModelNoCabin)
#summary(logisticModelASC)
setwd("/Users/ashlynkaran/Desktop/Kaggle/titanic_kaggle")
library('caret')
library('e1071')
library('dplyr')
library('rpart')
library('randomForest')
train <- read.csv('./input/train.csv')
test  <- read.csv('./input/test.csv')
#full  <- bind_rows(train, test)
# check data
str(train)
str(test)
train$Cabin <- substring(train$Cabin, 1, 1)
test$Cabin <- substring(test$Cabin, 1, 1)
#Neither of these seem to be dropping the columns we want. But I don't think that matters.
drops <- c("Ticket", "PassengerId")
trainSubset <- train[, !(names(train) %in% drops)]
testSubset <- test[, !(names(test) %in% drops)]
#trainSubset <- train[,-which(names(train) %in% c("Ticket", "PassengerId"))]
#testSubset <- test[,-which(names(test) %in% c("Ticket", "PassengerId"))]
#This gives us a Title column and gets rid of the names at the same time.
names(trainSubset)[names(trainSubset) == 'Name'] <- 'Title'
trainSubset$Title <- gsub('(.*, )|(\\..*)', '', trainSubset$Title)
trainSubset$Title <- factor(trainSubset$Title)
names(testSubset)[names(testSubset) == 'Name'] <- 'Title'
testSubset$Title <- gsub('(.*, )|(\\..*)', '', testSubset$Title)
testSubset$Title <- factor(testSubset$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
trainSubset$Title[trainSubset$Title == 'Mlle']        <- 'Miss'
testSubset$Title[testSubset$Title == 'Mlle']        <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Ms']          <- 'Miss'
testSubset$Title[testSubset$Title == 'Ms']          <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Mme']         <- 'Mrs'
testSubset$Title[testSubset$Title == 'Mme']         <- 'Mrs'
trainSubset$Title[trainSubset$Title %in% rare_title]  <- 'Rare Title'
testSubset$Title[testSubset$Title %in% rare_title]  <- 'Rare Title'
#trainSubset <- train[,-which(names(train) %in% c("Name"))]
#testSubset <- test[,-which(names(test) %in% c("Name"))]
trainSubset$Pclass <- factor(trainSubset$Pclass)
trainSubset$Survived <- factor(trainSubset$Survived)
trainSubset <- trainSubset[complete.cases(trainSubset),]
testSubset$Pclass <- factor(testSubset$Pclass)
testSubset <- testSubset[complete.cases(testSubset),]
trainSubset
testSubset
formula <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formulaASC <- Survived ~ Pclass + Sex + Age + SibSp
logisticModelASC <- glm(formulaASC, data=trainSubset, family="binomial")
anova(logisticModelASC, logisticModelNoCabin, test ="Chisq")
#summary(logisticModel)
#summary(logisticModelNoCabin)
#summary(logisticModelASC)
anova(logisticModelNoCabin, logisticModel, test ="Chisq")
formula9 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModel <- glm(formula, data=trainSubset, family="binomial")
formulaNoCabin8 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Embarked
logisticModelNoCabin <- glm(formulaNoCabin, data=trainSubset, family="binomial")
formula4 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModel4 <- glm(formulaASC, data=trainSubset, family="binomial")
formulaASC <- Survived ~ Pclass + Sex + Age
logisticModelASC <- glm(formulaASC, data=trainSubset, family="binomial")
anova(logisticModelNoCabin, logisticModel,test ="Chisq")
summary(logisticModel)
summary(logisticModelNoCabin)
summary(logisticModelASC)
formulaAll <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModelAll <- glm(formulaAll, data=trainSubset, family="binomial")
summary(logisticModelAll)
formula8 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin
logisticModel8 <- glm(formula8, data=trainSubset, family="binomial")
anova(logisticModelAll, logisticModel8, family = binomial)
summary(logisticModel8)
formula8 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin
logisticModel8 <- glm(formula8, data=trainSubset, family="binomial")
anova(logisticModelAll, logisticModel8, test = "Chisq")
summary(logisticModel8)
formula8 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin
logisticModel8 <- glm(formula8, data=trainSubset, family="binomial")
anova(logisticModel8, logisticModelAll, test = "Chisq")
summary(logisticModel8)
formula7 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare
logisticModel7 <- glm(formula7, data=trainSubset, family="binomial")
anova(logisticModel7, logisticModel8, test = "Chisq")
summary(logisticModel7)
formula6 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch
logisticModel6 <- glm(formula6, data=trainSubset, family="binomial")
anova(logisticModel6, logisticModel6, test = "Chisq")
summary(logisticModel6)
formula6 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch
logisticModel6 <- glm(formula6, data=trainSubset, family="binomial")
anova(logisticModel6, logisticModel7, test = "Chisq")
summary(logisticModel6)
formula5 <- Survived ~ Pclass + Title + Sex + Age + SibSp
logisticModel5 <- glm(formula5, data=trainSubset, family="binomial")
anova(logisticModel5, logisticModel6, test = "Chisq")
summary(logisticModel5)
formula4 <- Survived ~ Pclass + Sex + Age + SibSp
logisticModel4 <- glm(formula4, data=trainSubset, family="binomial")
anova(logisticModel4, logisticModel5, test = "Chisq")
summary(logisticModel4)
formula4.2 <- Survived ~ Pclass + Title + Age + SibSp
logisticModel4.2 <- glm(formula4.2, data=trainSubset, family="binomial")
anova(logisticModel4.2, logisticModel5, test = "Chisq")
anova(logisticModel4.2, logisticModel4, test = "Chisq")
summary(logisticModel4.2)
formula3A <- Survived ~ Pclass + Sex + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
formula4T <- Survived ~ Pclass + Title + Age + SibSp
logisticModel4T <- glm(formula4T, data=trainSubset, family="binomial")
anova(logisticModel4T, logisticModel5, test = "Chisq")
anova(logisticModel4T, logisticModel4S, test = "Chisq")
formula4S <- Survived ~ Pclass + Sex + Age + SibSp
logisticModel4S <- glm(formula4S, data=trainSubset, family="binomial")
anova(logisticModel4S, logisticModel5, test = "Chisq")
summary(logisticModel4)
formula4T <- Survived ~ Pclass + Title + Age + SibSp
logisticModel4T <- glm(formula4T, data=trainSubset, family="binomial")
anova(logisticModel4T, logisticModel5, test = "Chisq")
anova(logisticModel4T, logisticModel4S, test = "Chisq")
summary(logisticModel4.2)
formula3A <- Survived ~ Pclass + Sex + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
formula3A <- Survived ~ Pclass + Sex + Age
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
formula3A <- Survived ~ Age + Sex + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
formula3A <- Survived ~ Pclass + Age + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
formula3A <- Survived ~ Pclass + Age + Title
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
formula3A <- Survived ~ Pclass + Title + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
formula3A <- Survived ~ Title + Age + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
setwd("/Users/ashlynkaran/Desktop/Kaggle/titanic_kaggle")
library('caret')
library('e1071')
library('dplyr')
library('rpart')
library('randomForest')
train <- read.csv('./input/train.csv')
test  <- read.csv('./input/test.csv')
#full  <- bind_rows(train, test)
# check data
str(train)
str(test)
train$Cabin <- substring(train$Cabin, 1, 1)
test$Cabin <- substring(test$Cabin, 1, 1)
#Neither of these seem to be dropping the columns we want. But I don't think that matters.
drops <- c("Ticket")
trainSubset <- train[, !(names(train) %in% drops)]
testSubset <- test[, !(names(test) %in% drops)]
#trainSubset <- train[,-which(names(train) %in% c("Ticket", "PassengerId"))]
#testSubset <- test[,-which(names(test) %in% c("Ticket", "PassengerId"))]
#This gives us a Title column and gets rid of the names at the same time.
names(trainSubset)[names(trainSubset) == 'Name'] <- 'Title'
trainSubset$Title <- gsub('(.*, )|(\\..*)', '', trainSubset$Title)
trainSubset$Title <- factor(trainSubset$Title)
names(testSubset)[names(testSubset) == 'Name'] <- 'Title'
testSubset$Title <- gsub('(.*, )|(\\..*)', '', testSubset$Title)
testSubset$Title <- factor(testSubset$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
trainSubset$Title[trainSubset$Title == 'Mlle']        <- 'Miss'
testSubset$Title[testSubset$Title == 'Mlle']        <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Ms']          <- 'Miss'
testSubset$Title[testSubset$Title == 'Ms']          <- 'Miss'
trainSubset$Title[trainSubset$Title == 'Mme']         <- 'Mrs'
testSubset$Title[testSubset$Title == 'Mme']         <- 'Mrs'
trainSubset$Title[trainSubset$Title %in% rare_title]  <- 'Rare Title'
testSubset$Title[testSubset$Title %in% rare_title]  <- 'Rare Title'
#trainSubset <- train[,-which(names(train) %in% c("Name"))]
#testSubset <- test[,-which(names(test) %in% c("Name"))]
trainSubset$Pclass <- factor(trainSubset$Pclass)
trainSubset$Survived <- factor(trainSubset$Survived)
trainSubset <- trainSubset[complete.cases(trainSubset),]
testSubset$Pclass <- factor(testSubset$Pclass)
testSubset <- testSubset[complete.cases(testSubset),]
trainSubset
testSubset
formulaAll <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin + Embarked
logisticModelAll <- glm(formulaAll, data=trainSubset, family="binomial")
summary(logisticModelAll)
formula8 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare + Cabin
logisticModel8 <- glm(formula8, data=trainSubset, family="binomial")
anova(logisticModel8, logisticModelAll, test = "Chisq")
summary(logisticModel8)
formula7 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch + Fare
logisticModel7 <- glm(formula7, data=trainSubset, family="binomial")
anova(logisticModel7, logisticModel8, test = "Chisq")
summary(logisticModel7)
formula6 <- Survived ~ Pclass + Title + Sex + Age + SibSp + Parch
logisticModel6 <- glm(formula6, data=trainSubset, family="binomial")
anova(logisticModel6, logisticModel7, test = "Chisq")
summary(logisticModel6)
formula5 <- Survived ~ Pclass + Title + Sex + Age + SibSp
logisticModel5 <- glm(formula5, data=trainSubset, family="binomial")
anova(logisticModel5, logisticModel6, test = "Chisq")
summary(logisticModel5)
formula4S <- Survived ~ Pclass + Sex + Age + SibSp
logisticModel4S <- glm(formula4S, data=trainSubset, family="binomial")
anova(logisticModel4S, logisticModel5, test = "Chisq")
summary(logisticModel4)
formula4T <- Survived ~ Pclass + Title + Age + SibSp
logisticModel4T <- glm(formula4T, data=trainSubset, family="binomial")
anova(logisticModel4T, logisticModel5, test = "Chisq")
anova(logisticModel4T, logisticModel4S, test = "Chisq")
summary(logisticModel4.2)
formula3A <- Survived ~ Pclass + Title + SibSp
logisticModel3A <- glm(formula3A, data=trainSubset, family="binomial")
anova(logisticModel3A, logisticModel4T, test = "Chisq")
summary(logisticModel3A)
set.seed(100)
#trainSubset <- full[,]
rpartTune <- train(Survived ~ ., data = trainSubset,
method="rpart2",
tuneLength = 10,
trControl = trainControl(method = "cv"),
na.action=na.exclude
)
plot(rpartTune)
set.seed(999)
rf_model <- randomForest(Survived ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title + Cabin,
data = trainSubset)
formula4T <- Survived ~ Pclass + Title + Age + SibSp
logisticModel4T <- glm(formula4T, data=trainSubset, family="binomial")
anova(logisticModel4T, logisticModel5, test = "Chisq")
anova(logisticModel4T, logisticModel4S, test = "Chisq")
summary(logisticModel4T)
prediction <- predict(logisticModel4T, testSubset)
solution <- data.frame(PassengerID = testSubset$PassengerId, Survived = prediction)
write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
prediction <- predict(logisticModel4T, testSubset)
solution <- data.frame(PassengerID = testSubset$PassengerId, Survived = prediction)
write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
solution
